name: ci
on:
  push:
    branches: [main]
    paths:
      - '**.ps1'
      - '**.psm1'
      - '**.psd1'
      - 'tests/**'
      - 'config/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - '**.ps1'
      - '**.psm1'
      - '**.psd1'
      - 'tests/**'
      - 'config/**'
      - '.github/workflows/ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache PSScriptAnalyzer
        uses: actions/cache@v4
        with:
          path: ~\Documents\PowerShell\Modules\PSScriptAnalyzer
          key: ${{ runner.os }}-psscriptanalyzer-${{ hashFiles('**/PSScriptAnalyzerSettings.psd1') }}
          
      - name: Install PSScriptAnalyzer
        run: |
          if (!(Get-Module -ListAvailable PSScriptAnalyzer)) {
            Install-Module PSScriptAnalyzer -Scope CurrentUser -Force
          }
        shell: pwsh
        
      - name: Run PSScriptAnalyzer
        id: lint
        run: |
          # Analyze main code directories, excluding samples/before-* files
          $paths = @('PoshGuard', 'tools', 'tests', 'config')
          $allResults = @()
          
          foreach ($path in $paths) {
            if (Test-Path $path) {
              $results = Invoke-ScriptAnalyzer `
                -Path $path `
                -Recurse `
                -Severity Error,Warning `
                -Settings ./config/PSScriptAnalyzerSettings.psd1
              
              if ($results) {
                $allResults += $results
              }
            }
          }
          
          # Report summary
          if ($allResults) {
            Write-Host "::warning::Found $($allResults.Count) PSScriptAnalyzer issues"
            $allResults | Group-Object Severity | Format-Table -AutoSize
            
            # Save results as JSON for artifact
            $allResults | ConvertTo-Json -Depth 10 | Set-Content 'pssa-results.json'
            
            # Fail if critical errors found
            $errors = $allResults | Where-Object Severity -eq 'Error'
            if ($errors) {
              Write-Host "::error::Found $($errors.Count) error-level violations"
              exit 1
            }
          } else {
            Write-Host "âœ“ No PSScriptAnalyzer issues found!"
          }
        shell: pwsh
        continue-on-error: true
        
      - name: Upload Analysis Results
        uses: actions/upload-artifact@v4
        if: always() && hashFiles('pssa-results.json') != ''
        with:
          name: pssa-results
          path: pssa-results.json

  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache Pester
        uses: actions/cache@v4
        with:
          path: ~\Documents\PowerShell\Modules\Pester
          key: ${{ runner.os }}-pester-5
          
      - name: Install Pester
        run: |
          if (!(Get-Module -ListAvailable Pester)) {
            Install-Module Pester -Scope CurrentUser -Force -SkipPublisherCheck
          }
        shell: pwsh
        
      - name: Run Pester Tests
        run: |
          $config = New-PesterConfiguration
          $config.Run.Path = './tests/'
          $config.Run.Exit = $true
          $config.Output.Verbosity = 'Detailed'
          $config.TestResult.Enabled = $true
          $config.TestResult.OutputPath = 'TestResults.xml'
          $config.CodeCoverage.Enabled = $false
          
          Invoke-Pester -Configuration $config
        shell: pwsh
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: TestResults.xml

  package:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Package
        run: |
          zip -r poshguard-${{ github.sha }}.zip \
            tools/ \
            PoshGuard/ \
            README.md \
            LICENSE \
            docs/CHANGELOG.md \
            docs/SECURITY.md \
            docs/CONTRIBUTING.md
            
      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: poshguard-package
          path: poshguard-${{ github.sha }}.zip
          retention-days: 30
